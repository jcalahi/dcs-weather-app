{"version":3,"sources":["constants.js","context/WeatherContext.js","containers/SearchBox/SearchBox.js","hooks/useWeather.js","hooks/useLookup.js","hooks/useGeoLocation.js","components/Media/MediaHeader.js","components/Media/MediaHeaderIcon.js","components/Media/MediaContent.js","components/Media/index.js","components/Header/HeaderTitle.js","components/Header/HeaderIcon.js","components/Header/index.js","components/Weather/WeatherIcon.js","components/FavoriteIcon/index.js","components/Weather/WeatherCard.js","components/Weather/WeatherTemp.js","components/Weather/WeatherTile.js","components/Weather/index.js","containers/CityInfo/CityInfo.js","containers/Favorites/Favorites.js","containers/TopCities/TopCities.js","containers/Home/Home.js","App.js","index.js"],"names":["ACTION_TYPES","initialState","weather","favorites","reducer","state","action","type","name","location","cityIndex","findIndex","city","slice","WeatherStateContext","createContext","WeatherStateProvider","children","Provider","value","useReducer","SearchContainer","styled","div","SearchButton","button","SearchLocation","SearchBox","useContext","WeatherContext","dispatch","useState","query","setQuery","setWeather","isFetchingCurrent","setIsFetchingCurrent","errorMessage","setErrorMessage","fetchCurrent","useCallback","a","params","access_key","process","axios","get","data","error","info","useWeather","results","setResults","isLookingUp","setIsLookingUp","errorLookupMsg","setErrorLookupMsg","lookup","useLookup","options","position","setPosition","setError","onSuccess","coords","latitude","longitude","onError","getPosition","geolocation","navigator","getCurrentPosition","useGeoLocation","debounceSearch","useMemo","debounce","useEffect","onSubmit","e","preventDefault","searchStr","target","focusInputOnSuggestionClick","inputProps","placeholder","onChange","newValue","suggestions","onSuggestionsFetchRequested","reason","cancel","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","getSuggestionValue","suggestion","region","country","renderSuggestion","size","icon","faSpinner","faSearch","spin","style","marginTop","textAlign","onClick","FlexContainer","H2","h2","H4","h4","MediaHeader","primaryText","secondaryText","extra","flexBasis","Span","span","MediaHeaderIcon","onIconClick","defaultProps","MediaContent","Media","StyledHeaderTitle","HeaderTitle","title","subTitle","className","HeaderIcon","cursor","Header","IconContainer","props","WeatherIcon","alt","src","FavoriteIcon","FontAwesomeIcon","prefix","Weather","WeatherDetails","WeatherCard","temp","isFavorite","onCardClick","solid","regular","TempH3","h3","DescH4","WeatherTemp","alignSelf","temperature","description","TileDiv","WeatherTile","CityContainer","CityInfo","current","Object","keys","length","Date","localtime_epoch","toDateString","favorite","justifyContent","weather_icons","weather_descriptions","wind_speed","wind_dir","pressure","humidity","cloudcover","feelslike","FavoritesContainer","GridContainer","Favorites","map","idx","key","TopCitiesContainer","TopCities","Home","padding","margin","width","App","basename","window","pathname","exact","path","component","whyDidYouRender","React","onlyLogs","titleColor","diffNameColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f35df69.chunk.js","sourcesContent":["export const WEATHER_BASE_URL = 'https://api.weatherstack.com';\nexport const ACTION_TYPES = {\n  FETCH_WEATHER: 'FETCH_WEATHER',\n  TOGGLE_FAVORITES: 'TOGGLE_FAVORITES',\n  REMOVE: 'REMOVE'\n};\n","import React, { createContext, useReducer } from 'react';\nimport { ACTION_TYPES } from '../constants';\n\nconst initialState = {\n  weather: {},\n  favorites: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_WEATHER: {\n      return {\n        ...state,\n        weather: action.weather\n      };\n    }\n    case ACTION_TYPES.TOGGLE_FAVORITES: {\n      const { name } = action.weather.location;\n      const cityIndex = state.favorites.findIndex((city) => city.location.name === name);\n      // favorites must be unique\n      // then remove if selected again\n      if (cityIndex === -1) {\n        return {\n          ...state,\n          favorites: [...state.favorites, action.weather]\n        };\n      } else {\n        return {\n          ...state,\n          favorites: [\n            ...state.favorites.slice(0, cityIndex),\n            ...state.favorites.slice(cityIndex + 1)\n          ]\n        };\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst WeatherStateContext = createContext();\n\nconst WeatherStateProvider = ({ children }) => {\n  return (\n    <WeatherStateContext.Provider value={useReducer(reducer, initialState)}>\n      {children}\n    </WeatherStateContext.Provider>\n  );\n};\n\nexport default { WeatherStateContext, WeatherStateProvider };\n","import React, { useContext, useEffect, useState, useMemo } from 'react';\nimport styled from 'styled-components';\nimport debounce from 'lodash/debounce';\nimport Autosuggest from 'react-autosuggest';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSpinner } from '@fortawesome/free-solid-svg-icons';\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// hooks\nimport useLookup from '../../hooks/useLookup';\nimport useWeather from '../../hooks/useWeather';\nimport { useGeoLocation } from '../../hooks/useGeoLocation';\n// etc\nimport { ACTION_TYPES } from '../../constants';\n\nconst SearchContainer = styled.div`\n  & {\n    display: flex;\n\n    & .react-autosuggest {\n\n      &__container {\n        flex: 1;\n        position: relative;\n      }\n\n      &__input {\n        border: 2px solid var(--color-lightgrey);\n        font-family: 'Fredoka One', cursive;\n        font-size: 2.5rem;\n        letter-spacing: 2px;\n        padding: 1rem 4rem 1rem 1rem;\n        outline: none;\n        transition: all 0.2s ease-in-out;\n        width: 100%;\n\n        &::placeholder {\n          color: var(--color-lightgrey);\n        }\n\n        &:focus {\n          border: 2px solid var(--color-lightslategrey);\n\n          &::placeholder {\n            color: var(--color-lightslategrey);\n          }\n        }\n\n        &--open {\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      &__suggestions {\n        &-container {\n          display: none;\n        }\n\n        &-container--open {\n          display: block;\n          position: absolute;\n          top: 6rem;\n          width: 100%;\n          border: 2px solid var(--color-lightslategrey);\n          background-color: #fff;\n          font-family: Raleway;\n          font-weight: 400;\n          font-size: 1.6rem;\n          z-index: 10;\n        }\n\n        &-list {\n          margin: 0;\n          padding: 0;\n          list-style-type: none;\n        }\n      }\n\n      &__suggestion {\n        cursor: pointer;\n        padding: 1rem 2rem;\n\n        &--highlighted {\n          background-color: var(--color-lightslategrey);\n        }\n      }\n    }\n  }\n`;\n\nconst SearchButton = styled.button`\n  background-color: transparent;\n  border: none;\n  margin-left: -3.5rem;\n  z-index: 10;\n  transition: all 0.2s ease-in-out;\n\n  &:active {\n    transform: translateY(5px);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst SearchLocation = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n\n  > span {\n    font-family: Raleway;\n    font-size: 1.5rem;\n    font-weight: 600;\n    text-decoration: underline;\n  }\n`;\n\nfunction SearchBox() {\n  const [, dispatch] = useContext(WeatherContext.WeatherStateContext);\n\n  const [query, setQuery] = useState('');\n\n  const { weather, isFetchingCurrent, fetchCurrent } = useWeather();\n  const { results, isLookingUp, lookup } = useLookup();\n  const { position, getPosition } = useGeoLocation();\n\n  const debounceSearch = useMemo(() => debounce(lookup, 400), [lookup]);\n\n  useEffect(() => {\n    dispatch({ type: ACTION_TYPES.FETCH_WEATHER, weather });\n  }, [weather, dispatch]);\n\n  useEffect(() => {\n    if (position) {\n      fetchCurrent(position);\n    }\n  }, [fetchCurrent, position]);\n\n  const handleChange = (e, { newValue }) => {\n    setQuery(newValue);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchStr = e.target[0].value;\n    // call API if input is not blank\n    if (searchStr !== '') {\n      fetchCurrent(searchStr);\n    }\n  };\n  // populates the input value upon mouse/keyboard click\n  const getSuggestionValue = (suggestion) => {\n    return `${suggestion.name}, ${suggestion.region}, ${suggestion.country}`;\n  };\n  // renders the list of suggestions via dropdown container\n  const renderSuggestion = (suggestion) => {\n    return (\n      <span>{`${suggestion.name}, ${suggestion.region}, ${suggestion.country}`}</span>\n    );\n  };\n\n  const onSuggestionsFetchRequested = ({ reason, value }) => {\n    if (reason === 'input-changed') {\n      debounceSearch(value);\n    } else {\n      debounceSearch.cancel();\n    }\n  };\n  // triggers api call when clicking a city inside select options\n  // by default, this only works on keydown\n  const onSuggestionSelected = (e, { suggestionValue }) => {\n    if (e.type === 'click') {\n      fetchCurrent(suggestionValue);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <SearchContainer>\n          <Autosuggest\n            focusInputOnSuggestionClick={false}\n            inputProps={{\n              placeholder: 'Enter a city names',\n              onChange: handleChange,\n              value: query,\n            }}\n            suggestions={results}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={() => {}}\n            onSuggestionSelected={onSuggestionSelected}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n          />\n          <SearchButton>\n            <FontAwesomeIcon\n              size=\"2x\"\n              icon={isLookingUp || isFetchingCurrent ? faSpinner : faSearch}\n              spin={isLookingUp || isFetchingCurrent}\n            />\n          </SearchButton>\n        </SearchContainer>\n      </form>\n      <div style={{ marginTop: '1rem', textAlign: 'center' }}>\n        <SearchLocation onClick={() => getPosition()}>\n          <span>Or use my location</span>\n        </SearchLocation>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { WEATHER_BASE_URL } from '../constants';\n\nexport default function useWeather() {\n  const [weather, setWeather] = useState({});\n  const [isFetchingCurrent, setIsFetchingCurrent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const fetchCurrent = useCallback(async (query) => {\n    const params = {\n      access_key: process.env.REACT_APP_WEATHER_API_KEY,\n      query\n    };\n\n    try {\n      setIsFetchingCurrent(true);\n      const { data } = await axios.get(`${WEATHER_BASE_URL}/current`, { params });\n      if (data.error) {\n        setErrorMessage(data.error.info);\n      } else {\n        setWeather(data);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n    } finally {\n      setIsFetchingCurrent(false);\n    }\n  }, []);\n\n  return {\n    weather,\n    isFetchingCurrent,\n    fetchCurrent,\n    errorMessage\n  };\n}","import { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { WEATHER_BASE_URL } from '../constants';\n\nexport default function useLookup() {\n  const [results, setResults] = useState([]);\n  const [isLookingUp, setIsLookingUp] = useState(false);\n  const [errorLookupMsg, setErrorLookupMsg] = useState({});\n\n  const lookup = useCallback(async (query) => {\n    const params = {\n      access_key: process.env.REACT_APP_WEATHER_API_KEY,\n      query\n    };\n\n    try {\n      setIsLookingUp(true);\n      const { data } = await axios.get(`${WEATHER_BASE_URL}/autocomplete`, { params });\n      if (data.error) {\n        setErrorLookupMsg(data.error.info);\n      } else {\n        setResults(data.results);\n      }\n    } catch (error) {\n      setErrorLookupMsg(error);\n    } finally {\n      setIsLookingUp(false);\n    }\n  }, []);\n\n  return {\n    results,\n    setResults,\n    isLookingUp,\n    lookup,\n    errorLookupMsg\n  };\n}\n","import { useState, useCallback } from 'react';\n\nexport function useGeoLocation(options = {}) {\n  const [position, setPosition] = useState();\n  const [error, setError] = useState();\n\n  const onSuccess = (position) => {\n    const { latitude, longitude } = position.coords;\n    setPosition(`${latitude},${longitude}`);\n  };\n\n  const onError = (error) => {\n    setError(error);\n  };\n\n  const getPosition = useCallback(() => {\n    const { geolocation } = navigator;\n\n    if (!geolocation) {\n      setError('Geolocation is not supported.');\n      return;\n    }\n\n    geolocation.getCurrentPosition(onSuccess, onError, options);\n  }, [options]);\n\n  return {\n    position,\n    getPosition,\n    error\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { string, element } from 'prop-types';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H2 = styled.h2`\n  font-size: 4rem;\n  margin: 1.5rem 0;\n`;\n\nconst H4 = styled.h4`\n  font-family: Raleway;\n  font-size: 2.5rem;\n  margin: 1.5rem 0;\n`;\n\nfunction MediaHeader({ primaryText, secondaryText, extra }) {\n  return (\n    <div style={{ flexBasis: '100%' }}>\n      <FlexContainer>\n        <H2>{primaryText}</H2>\n        {extra}\n      </FlexContainer>\n      <H4>{secondaryText}</H4>\n    </div>\n  );\n}\n\nMediaHeader.propTypes = {\n  primaryText: string,\n  secondaryText: string,\n  extra: element,\n};\n\nexport default MediaHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { func, object } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Span = styled.span`\n  align-self: center;\n`;\n\nfunction MediaHeaderIcon({ onIconClick, icon }) {\n  return (\n    <Span onClick={onIconClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" />\n    </Span>\n  );\n}\n\nMediaHeaderIcon.propTypes = {\n  onIconClick: func,\n  icon: object\n};\n\nMediaHeaderIcon.defaultProps = {\n  onIconClick: () => {}\n};\n\nexport default MediaHeaderIcon;\n","import styled from 'styled-components';\n\nconst MediaContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 769px) {\n    flex-basis: 50%;\n  }\n\n  @media screen and (max-width: 768px) {\n    flex-basis: 100%;\n  }\n`;\n\nexport default MediaContent;\n","import styled from 'styled-components';\n\nimport MediaHeader from './MediaHeader';\nimport MediaHeaderIcon from './MediaHeaderIcon';\nimport MediaContent from './MediaContent';\n\nconst Media = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nMedia.MediaHeader = MediaHeader;\nMedia.MediaHeaderIcon = MediaHeaderIcon;\nMedia.MediaContent = MediaContent;\n\nexport default Media;\n","import React from 'react';\nimport { string } from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledHeaderTitle = styled.div`\n  width: 85%;\n\n  & .header {\n    &__title {\n      font-family: 'Fredoka One', sans-serif;\n      font-size: 2rem;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      width: 100%;\n    }\n\n    &__subTitle {\n      font-family: Raleway, sans-serif;\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nfunction HeaderTitle({ title, subTitle }) {\n  return (\n    <StyledHeaderTitle className=\"header\">\n      <h2 className=\"header__title\">{title}</h2>\n      <p className=\"header__subTitle\">{subTitle}</p>\n    </StyledHeaderTitle>\n  );\n}\n\nHeaderTitle.propTypes = {\n  title: string,\n  subTitle: string\n}\n\nexport default HeaderTitle;\n","import React from 'react';\nimport { func, element } from 'prop-types';\n\nfunction HeaderIcon({ children, onIconClick }) {\n  return (\n    <span className=\"header__icon\" style={{ cursor: 'pointer' }} onClick={onIconClick}>\n      {children}\n    </span>\n  );\n}\n\nHeaderIcon.propTypes = {\n  onIconClick: func,\n  children: element\n};\n\nexport default HeaderIcon;\n","import styled from 'styled-components';\nimport HeaderTitle from './HeaderTitle';\nimport HeaderIcon from './HeaderIcon';\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nHeader.HeaderTitle = HeaderTitle;\nHeader.HeaderIcon = HeaderIcon;\n\nexport default Header;\n","import React from 'react';\nimport { string } from 'prop-types';\nimport styled from 'styled-components';\n\nconst IconContainer = styled.span`\n  align-self: center;\n\n  & > img {\n    border-radius: 10rem;\n    ${(props) => props.size && `height: ${props.size}; width: ${props.size};`};\n  }\n`;\n\nfunction WeatherIcon(props) {\n  return (\n    <IconContainer size={props.size}>\n      <img alt=\"weather icon\" src={props.icon} />\n    </IconContainer>\n  );\n}\n\nWeatherIcon.propTypes = {\n  icon: string,\n  size: string\n};\n\nexport default WeatherIcon;\n","import styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst FavoriteIcon = styled(FontAwesomeIcon)`\n  &&& {\n    color: ${(props) => props.icon.prefix === 'fas' ? 'orange' : 'lightslategrey'};\n  }\n`;\n\nexport default FavoriteIcon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { faStar as regular } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as solid } from '@fortawesome/free-solid-svg-icons';\n// components\nimport Header from '../Header';\nimport WeatherIcon from './WeatherIcon';\nimport FavoriteIcon from '../FavoriteIcon';\n\nconst { HeaderTitle, HeaderIcon } = Header;\n\nconst Weather = styled.div`\n  border: 1px solid;\n  border-radius: 1rem;\n  max-width: 20rem;\n  padding: 1rem;\n`;\n\nconst WeatherDetails = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 1rem;\n\n  & .details__temp {\n    font-family: Raleway;\n    font-size: 3rem;\n  }\n`;\n\nfunction WeatherCard({ name, icon, temp, isFavorite, onCardClick }) {\n  return (\n    <Weather>\n      <Header>\n        <HeaderTitle title={name} />\n        <HeaderIcon onIconClick={onCardClick}>\n          <FavoriteIcon icon={isFavorite ? solid : regular} size=\"2x\" />\n        </HeaderIcon>\n      </Header>\n      <WeatherDetails>\n        <WeatherIcon icon={icon} size=\"4rem\" />\n        <span className=\"details__temp\">{temp} &#8451;</span>\n      </WeatherDetails>\n    </Weather>\n  );\n}\n\nexport default WeatherCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { number, string } from 'prop-types';\n\nconst TempH3 = styled.h3`\n  font-family: Raleway, sans-serif;\n  font-size: 10rem;\n  margin: 0;\n`;\n\nconst DescH4 = styled.h4`\n  font-family: Raleway, sans-serif;\n  font-size: 2.5rem;\n  font-weight: 400;\n  margin: 0;\n  max-width: 40rem;\n`;\n\nfunction WeatherTemp(props) {\n  return (\n    <div style={{ alignSelf: 'center' }}>\n      <TempH3>{props.temperature} &#8451;</TempH3>\n      <DescH4>{props.description}</DescH4>\n    </div>\n  );\n}\n\nWeatherTemp.propTypes = {\n  description: string,\n  temperature: number,\n  textSize: string,\n};\n\nexport default WeatherTemp;\n","import React from 'react';\nimport { string } from 'prop-types';\nimport styled from 'styled-components';\n\nconst TileDiv = styled.div`\n  display: inline-block;\n  flex-basis: 33.33%;\n  text-align: center;\n\n  & > div {\n    font-size: 4rem;\n  }\n\n  & > h5 {\n    font-family: Raleway, sans-serif;\n    font-size: 2.2rem;\n    font-weight: 400;\n    margin: 1rem 0;\n    text-align: center;\n  }\n`;\n\nfunction WeatherTile(props) {\n  return (\n    <TileDiv>\n      <div>{props.value}</div>\n      <h5>{props.description}</h5>\n    </TileDiv>\n  );\n}\n\nWeatherTile.propTypes = {\n  value: string,\n  description: string\n};\n\nexport default WeatherTile;\n","import styled from 'styled-components';\n\nimport WeatherCard from './WeatherCard';\nimport WeatherIcon from './WeatherIcon';\nimport WeatherTemp from './WeatherTemp';\nimport WeatherTile from './WeatherTile';\n\nconst Weather = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 769px) {\n    flex-basis: 50%;\n  }\n\n  @media screen and (max-width: 768px) {\n    flex-basis: 100%;\n  }\n`;\n\nWeather.WeatherIcon = WeatherIcon;\nWeather.WeatherTemp = WeatherTemp;\nWeather.WeatherTile = WeatherTile;\nWeather.WeatherCard = WeatherCard;\n\nexport default Weather;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { faStar as regular } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as solid } from '@fortawesome/free-solid-svg-icons';\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// components\nimport Media from '../../components/Media';\nimport Weather from '../../components/Weather';\nimport Header from '../../components/Header';\nimport FavoriteIcon from '../../components/FavoriteIcon';\n// etc\nimport { ACTION_TYPES } from '../../constants';\n\nconst { MediaContent } = Media;\nconst { WeatherIcon, WeatherTemp, WeatherTile } = Weather;\nconst { HeaderTitle, HeaderIcon } = Header;\n\nconst CityContainer = styled.div`\n  .header__title {\n    font-size: 3.5rem;\n    margin-bottom: 1rem;\n  }\n  .header__subTitle {\n    font-size: 2.5rem;\n  }\n`;\n\nfunction CityInfo() {\n  const [{ weather, favorites }, dispatch] = useContext(WeatherContext.WeatherStateContext);\n  const { current, location } = weather;\n\n  const getCityName = () => {\n    return `${location.name}, ${location.country}`;\n  };\n\n  const getCurrentDate = () => {\n    return new Date(location.localtime_epoch * 1000).toDateString();\n  };\n\n  const isFavorite = () => {\n    const idx = favorites.findIndex((favorite) => favorite.location.name === location.name);\n    return idx !== -1;\n  };\n\n  if (Object.keys(weather).length === 0) return null;\n\n  return (\n    <CityContainer>\n      <Header>\n        <HeaderTitle title={getCityName()} subTitle={getCurrentDate()} />\n        <HeaderIcon onIconClick={() => dispatch({ type: ACTION_TYPES.TOGGLE_FAVORITES, weather })}>\n          <FavoriteIcon icon={isFavorite() ? solid : regular} size=\"3x\" />\n        </HeaderIcon>\n      </Header>\n      <Media>\n        <MediaContent style={{ justifyContent: 'space-evenly' }}>\n          <WeatherIcon icon={current.weather_icons[0]} size=\"12rem\" />\n          <WeatherTemp temperature={current.temperature} description={current.weather_descriptions[0]} />\n        </MediaContent>\n        <Weather>\n          <WeatherTile value={`${current.wind_speed} km/h`} description=\"Wind Speed\" />\n          <WeatherTile value={`${current.wind_dir}`} description=\"Wind Direction\" />\n          <WeatherTile value={`${current.pressure} mb`} description=\"Pressure\" />\n          <WeatherTile value={`${current.humidity} %`} description=\"Humidity\" />\n          <WeatherTile value={`${current.cloudcover} %`} description=\"Cloud Cover\" />\n          <WeatherTile value={`${current.feelslike} ${'\\u00b0'}C`} description=\"Feels like\" />\n        </Weather>\n      </Media>\n    </CityContainer>\n  );\n}\n\nexport default CityInfo;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// components\nimport Weather from '../../components/Weather';\n// etc\nimport { ACTION_TYPES } from '../../constants';\n\nconst { WeatherCard } = Weather;\n\nconst FavoritesContainer = styled.div`\n  h2 {\n    font-size: 3.5rem;\n    margin: 1rem 0;\n  }\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-column-gap: 2rem;\n  grid-row-gap: 2rem;\n  grid-template-columns: repeat(8, 1fr);\n`;\n\nfunction Favorites() {\n  const [{ favorites }, dispatch] = useContext(WeatherContext.WeatherStateContext);\n\n  const renderFavorites = () => {\n    return favorites.map((favorite, idx) => {\n      const { current, location } = favorite;\n      return (\n        <WeatherCard\n          key={idx}\n          name={location.name}\n          region={location.region}\n          icon={current.weather_icons[0]}\n          temp={current.temperature}\n          isFavorite\n          onCardClick={() => dispatch({ type: ACTION_TYPES.TOGGLE_FAVORITES, weather: favorite })}\n        />\n      );\n    });\n  };\n\n  if (favorites.length === 0) return null;\n\n  return (\n    <FavoritesContainer>\n      <h2>{`Favorites (${favorites.length})`}</h2>\n      <GridContainer>\n        {renderFavorites()}\n      </GridContainer>\n    </FavoritesContainer>\n  );\n}\n\nexport default Favorites;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TopCitiesContainer = styled.div`\n  h2 {\n    font-size: 3.5rem;\n    margin: 1rem 0;\n  }\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-column-gap: 2rem;\n  grid-row-gap: 2rem;\n  grid-template-columns: repeat(8, 1fr);\n  grid-template-rows: repeat(auto, 10rem);\n`;\n\nfunction TopCities() {\n  return (\n    <TopCitiesContainer>\n      <h2>Top 15 cities by population</h2>\n      <GridContainer></GridContainer>\n    </TopCitiesContainer>\n  )\n}\n\nexport default TopCities;\n","import React from 'react';\n// components\nimport SearchBox from '../SearchBox';\nimport CityInfo from '../CityInfo';\nimport Favorites from '../Favorites';\nimport TopCities from '../TopCities';\n\nfunction Home() {\n  return (\n    <div style={{ padding: '100px 150px' }}>\n      <div style={{ margin: '0 auto', width: '600px' }}>\n        <SearchBox placeholder=\"Enter a city name\" />\n      </div>\n      <section>\n        <CityInfo />\n      </section>\n      <section>\n        <Favorites />\n      </section>\n      <section>\n        <TopCities />\n      </section>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// context\nimport WeatherContext from './context/WeatherContext';\n// components\nimport Home from './containers/Home';\nimport CityInfo from './containers/CityInfo';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <WeatherContext.WeatherStateProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/details\" component={CityInfo} />\n        </Switch>\n      </WeatherContext.WeatherStateProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport whyDidYouRender from \"@welldone-software/why-did-you-render\";\n\nimport './index.css';\nimport App from './App';\n\nwhyDidYouRender(React, {\n  onlyLogs: true,\n  titleColor: \"green\",\n  diffNameColor: \"darkturquoise\"\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}