{"version":3,"sources":["context/WeatherContext.js","components/Media/MediaHeader.js","components/Media/MediaHeaderIcon.js","components/Media/index.js","containers/CityInfo/CityInfo.js","components/Search/index.js","containers/SearchBox/SearchBox.js","hooks/useWeather.js","constants.js","containers/Home/Home.js","App.js","index.js"],"names":["WeatherStateContext","createContext","WeatherStateProvider","children","useState","currentWeather","setCurrentWeather","Provider","value","FlexContainer","styled","div","H2","h2","H4","h4","MediaHeader","primaryText","secondaryText","extra","Span","span","MediaHeaderIcon","onIconClick","icon","onClick","size","defaultProps","Body","Content","Media","MediaBody","MediaContent","CityInfo","useContext","WeatherContext","console","log","Object","keys","length","city","location","name","country","getCityName","Date","localtime_epoch","toDateString","regular","whyDidYouRender","Input","input","Button","button","Search","props","style","display","htmlFor","id","SearchInput","SearchButton","SearchBox","placeholder","weather","setWeather","isFetchingCurrent","setIsFetchingCurrent","errorMessage","setErrorMessage","useCallback","query","a","params","access_key","process","axios","get","data","error","info","useWeather","fetchCurrent","useEffect","onSubmit","e","searchStr","target","preventDefault","faSpinner","faSearch","spin","Home","padding","margin","width","App","basename","window","pathname","exact","path","component","React","onlyLogs","titleColor","diffNameColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c71d916.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst WeatherStateContext = createContext();\nconst WeatherStateProvider = ({ children }) => {\n  const [currentWeather, setCurrentWeather] = useState({});\n  return (\n    <WeatherStateContext.Provider value={{ currentWeather, setCurrentWeather }}>\n      {children}\n    </WeatherStateContext.Provider>\n  );\n};\n\nexport default { WeatherStateContext, WeatherStateProvider };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { string, element } from 'prop-types';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H2 = styled.h2`\n  font-size: 4rem;\n  margin: 1.5rem 0;\n`;\n\nconst H4 = styled.h4`\n  font-size: 2rem;\n  margin: 1.5rem 0;\n`;\n\nfunction MediaHeader({ primaryText, secondaryText, extra }) {\n  return (\n    <>\n      <FlexContainer>\n        <H2>{primaryText}</H2>\n        {extra}\n      </FlexContainer>\n      <H4>{secondaryText}</H4>\n    </>\n  );\n}\n\nMediaHeader.propTypes = {\n  primaryText: string,\n  secondaryText: string,\n  extra: element,\n};\n\nexport default MediaHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { func, object } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Span = styled.span`\n  align-self: center;\n`;\n\nfunction MediaHeaderIcon({ onIconClick, icon }) {\n  return (\n    <Span onClick={onIconClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" />\n    </Span>\n  );\n}\n\nMediaHeaderIcon.propTypes = {\n  onIconClick: func,\n  icon: object\n};\n\nMediaHeaderIcon.defaultProps = {\n  onIconClick: () => {}\n};\n\nexport default MediaHeaderIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport MediaHeader from './MediaHeader';\nimport MediaHeaderIcon from './MediaHeaderIcon';\n\nconst Body = styled.div``;\nconst Content = styled.div``;\n\nconst Media = styled.div``;\n\nMedia.MediaHeader = MediaHeader;\nMedia.MediaHeaderIcon = MediaHeaderIcon;\nMedia.MediaBody = Body;\nMedia.MediaContent = Content;\n\nexport default Media;\n","import React, { useContext } from 'react';\nimport { faStar as solid } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as regular } from '@fortawesome/free-regular-svg-icons';\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// components\nimport Media from '../../components/Media';\n\nconst { MediaHeader, MediaHeaderIcon, MediaBody } = Media;\n\nfunction CityInfo() {\n  const { currentWeather } = useContext(WeatherContext.WeatherStateContext);\n  console.log(currentWeather);\n\n  const getCityName = () => {\n    const city = currentWeather.location;\n    return `${city.name}, ${city.country}`;\n  };\n\n  const getCurrentDate = () => {\n    const date = new Date(currentWeather.location.localtime_epoch * 1000);\n    return date.toDateString();\n  };\n\n  if (Object.keys(currentWeather).length === 0) return null;\n\n  return (\n    <Media>\n      <MediaHeader\n        primaryText={getCityName()}\n        secondaryText={getCurrentDate()}\n        extra={<MediaHeaderIcon icon={regular} onIconClick={() => console.log('click')} />}\n      />\n    </Media>\n  );\n}\n\nCityInfo.whyDidYouRender = true;\n\nexport default CityInfo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  border: 2px solid var(--color-lightgrey);\n  border-radius: 5rem;\n  font-family: 'Fredoka One', cursive;\n  font-size: 2.6rem;\n  letter-spacing: 2px;\n  padding: 1rem 4rem 1rem 1rem;\n  margin-right: -3.5rem;\n  outline: none;\n  width: 100%;\n  transition: all 0.2s ease-out;\n\n  &::placeholder {\n    color: var(--color-lightgrey);\n  }\n\n  &:focus {\n    border: 2px solid var(--color-lightslategrey);\n\n    &::placeholder {\n      color: var(--color-lightslategrey);\n    }\n  }\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Search = (props) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <label htmlFor={props.id}></label>\n      {props.children}\n    </div>\n  );\n};\n\nSearch.SearchInput = Input;\nSearch.SearchButton = Button;\n\nexport default Search;\n","import React, { useContext, useEffect } from 'react';\nimport { string } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// hooks\nimport useWeather from '../../hooks/useWeather';\n// components\nimport Search from '../../components/Search';\n\nconst { SearchInput, SearchButton } = Search;\n\nfunction SearchBox(props) {\n  const { id, placeholder } = props;\n  const [weather, isFetchingCurrent, fetchCurrent] = useWeather();\n  const { setCurrentWeather } = useContext(WeatherContext.WeatherStateContext);\n\n  useEffect(() => {\n    setCurrentWeather(weather);\n  }, [weather, setCurrentWeather]);\n\n  const handleSubmit = (e) => {\n    const searchStr = e.target[0].value;\n    e.preventDefault();\n    fetchCurrent(searchStr);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Search id={id}>\n        <SearchInput id={id} placeholder={placeholder} />\n        <SearchButton>\n          <FontAwesomeIcon icon={isFetchingCurrent ? faSpinner : faSearch} size=\"2x\" spin={isFetchingCurrent} />\n        </SearchButton>\n      </Search>\n    </form>\n  );\n}\n\nSearchBox.propTypes = {\n  id: string,\n  placeholder: string\n};\n\nSearchBox.defaultProps = {\n  id: 'search-input',\n  placeholder: 'Enter a text here',\n};\n\nSearchBox.whyDidYouRender = true;\n\nexport default SearchBox;","import { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { WEATHER_BASE_URL } from '../constants';\n\nexport default function useWeather() {\n  const [weather, setWeather] = useState({});\n  const [isFetchingCurrent, setIsFetchingCurrent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const fetchCurrent = useCallback(async (query) => {\n    const params = {\n      access_key: process.env.REACT_APP_WEATHER_API_KEY,\n      query\n    };\n\n    try {\n      setIsFetchingCurrent(true);\n      const { data } = await axios.get(`${WEATHER_BASE_URL}/current`, { params });\n      if (data.error) {\n        setErrorMessage(data.error.info);\n      } else {\n        setWeather(data);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n    } finally {\n      setIsFetchingCurrent(false);\n    }\n  }, []);\n\n  return [\n    weather,\n    isFetchingCurrent,\n    fetchCurrent,\n    errorMessage\n  ];\n}","export const WEATHER_BASE_URL = 'http://api.weatherstack.com/';\n","import React from 'react';\nimport CityInfo from '../CityInfo';\nimport SearchBox from '../SearchBox';\n\nfunction Home() {\n  return (\n    <div style={{ padding: '100px' }}>\n      <div style={{ margin: '0 auto', width: '600px' }}>\n        <SearchBox placeholder=\"Enter a city name\" />\n      </div>\n      <div>\n        <CityInfo />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// context\nimport WeatherContext from './context/WeatherContext';\n// components\nimport Home from './containers/Home';\nimport CityInfo from './containers/CityInfo';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <WeatherContext.WeatherStateProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/details\" component={CityInfo} />\n        </Switch>\n      </WeatherContext.WeatherStateProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport whyDidYouRender from \"@welldone-software/why-did-you-render\";\n\nimport './index.css';\nimport App from './App';\n\nwhyDidYouRender(React, {\n  onlyLogs: true,\n  titleColor: \"green\",\n  diffNameColor: \"darkturquoise\"\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}