{"version":3,"sources":["context/WeatherContext.js","components/Media/MediaHeader.js","components/Media/MediaHeaderIcon.js","components/Media/MediaContent.js","components/Media/index.js","utils.js","components/Weather/WeatherIcon.js","components/Weather/WeatherTemp.js","components/Weather/index.js","containers/CityInfo/CityInfo.js","components/Search/index.js","containers/SearchBox/SearchBox.js","hooks/useWeather.js","constants.js","containers/Home/Home.js","App.js","index.js"],"names":["WeatherStateContext","createContext","WeatherStateProvider","children","useState","currentWeather","setCurrentWeather","Provider","value","FlexContainer","styled","div","H2","h2","H4","h4","MediaHeader","primaryText","secondaryText","extra","style","flexBasis","Span","span","MediaHeaderIcon","onIconClick","icon","onClick","size","defaultProps","MediaContent","Media","getWeatherDescription","weatherCode","list","113","116","119","122","143","176","179","182","185","200","227","230","248","260","263","266","281","284","293","296","faCloudRain","299","302","305","308","311","IconContainer","props","WeatherIcon","TempH3","h3","DescH4","WeatherTemp","temperature","description","Weather","CityInfo","useContext","WeatherContext","console","log","current","location","Object","keys","length","name","country","Date","localtime_epoch","toDateString","regular","justifyContent","weather_code","weather_descriptions","whyDidYouRender","Input","input","Button","button","Search","display","htmlFor","id","SearchInput","SearchButton","SearchBox","placeholder","weather","setWeather","isFetchingCurrent","setIsFetchingCurrent","errorMessage","setErrorMessage","useCallback","query","a","params","access_key","process","axios","get","data","error","info","useWeather","fetchCurrent","useEffect","onSubmit","e","searchStr","target","preventDefault","faSpinner","faSearch","spin","Home","padding","margin","width","App","basename","window","pathname","exact","path","component","React","onlyLogs","titleColor","diffNameColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.840483d5.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst WeatherStateContext = createContext();\n\nconst WeatherStateProvider = ({ children }) => {\n  const [currentWeather, setCurrentWeather] = useState({});\n  return (\n    <WeatherStateContext.Provider value={{ currentWeather, setCurrentWeather }}>\n      {children}\n    </WeatherStateContext.Provider>\n  );\n};\n\nexport default { WeatherStateContext, WeatherStateProvider };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { string, element } from 'prop-types';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between\n`;\n\nconst H2 = styled.h2`\n  font-size: 4rem;\n  margin: 1.5rem 0;\n`;\n\nconst H4 = styled.h4`\n  font-size: 2rem;\n  margin: 1.5rem 0;\n`;\n\nfunction MediaHeader({ primaryText, secondaryText, extra }) {\n  return (\n    <div style={{ flexBasis: '100%' }}>\n      <FlexContainer>\n        <H2>{primaryText}</H2>\n        {extra}\n      </FlexContainer>\n      <H4>{secondaryText}</H4>\n    </div>\n  );\n}\n\nMediaHeader.propTypes = {\n  primaryText: string,\n  secondaryText: string,\n  extra: element,\n};\n\nexport default MediaHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { func, object } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Span = styled.span`\n  align-self: center;\n`;\n\nfunction MediaHeaderIcon({ onIconClick, icon }) {\n  return (\n    <Span onClick={onIconClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" />\n    </Span>\n  );\n}\n\nMediaHeaderIcon.propTypes = {\n  onIconClick: func,\n  icon: object\n};\n\nMediaHeaderIcon.defaultProps = {\n  onIconClick: () => {}\n};\n\nexport default MediaHeaderIcon;\n","import styled from 'styled-components';\n\nconst MediaContent = styled.div`\n  display: flex;\n  flex-basis: 50%;\n`;\n\nexport default MediaContent;\n","import styled from 'styled-components';\n\nimport MediaHeader from './MediaHeader';\nimport MediaHeaderIcon from './MediaHeaderIcon';\nimport MediaContent from './MediaContent';\n\nconst Media = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nMedia.MediaHeader = MediaHeader;\nMedia.MediaHeaderIcon = MediaHeaderIcon;\nMedia.MediaContent = MediaContent;\n\nexport default Media;\n","import { faCloudRain } from '@fortawesome/free-solid-svg-icons';\n\nexport const getWeatherDescription = (weatherCode) => {\n  const list = {\n    113: 'Clear',\n    116: 'Partly cloudy',\n    119: 'Cloudy',\n    122: 'Overcast',\n    143: 'Mist',\n    176: 'Patchy rain possible',\n    179: 'Patchy snow possible',\n    182: 'Patchy sleet possible',\n    185: 'Patchy freezing drizzle possible',\n    200: 'Thundery outbreaks possible',\n    227: 'Blowing snow',\n    230: 'Blizzard',\n    248: 'Fog',\n    260: 'Freezing fog',\n    263: 'Patchy light drizzle',\n    266: 'Light drizzle',\n    281: 'Freezing drizzle',\n    284: 'Heavy freezing drizzle',\n    293: 'Patchy light rain',\n    296: faCloudRain,\n    299: 'Moderate rain at times',\n    302: faCloudRain,\n    305: 'Heavy rain at times',\n    308: 'Heavy rain',\n    311: 'Light freezing rain',\n  };\n  // return a default value if weatherCode is not in the list\n  return list[weatherCode] || list[113];\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { number, string } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getWeatherDescription } from '../../utils';\n\nconst IconContainer = styled.div`\n  align-self: center;\n\n  & > svg {\n    ${(props) => (props.size) && `font-size: ${props.size}`}\n  }\n`;\n\nfunction WeatherIcon(props) {\n  return (\n    <IconContainer size={props.size}>\n      <FontAwesomeIcon icon={getWeatherDescription(props.weatherCode)} />\n    </IconContainer>\n  );\n}\n\nWeatherIcon.propTypes = {\n  weatherCode: number,\n  size: string\n};\n\nWeatherIcon.defaultProps = {\n  size: '2x'\n};\n\nexport default WeatherIcon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { number, string } from 'prop-types';\n\nconst TempH3 = styled.h3`\n  font-size: 8rem;\n  margin: 0;\n`;\n\nconst DescH4 = styled.h4`\n  font-size: 4rem;\n  margin: 0;\n`;\n\nfunction WeatherTemp(props) {\n  return (\n    <div>\n      <TempH3>{props.temperature} &#8451;</TempH3>\n      <DescH4>{props.description}</DescH4>\n    </div>\n  );\n}\n\nWeatherTemp.propTypes = {\n  description: string,\n  temperature: number\n};\n\nexport default WeatherTemp;\n","import WeatherIcon from './WeatherIcon';\nimport WeatherTemp from './WeatherTemp';\n\nexport default { WeatherIcon, WeatherTemp };\n","import React, { useContext } from 'react';\nimport { faStar as solid, faCloudRain } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as regular } from '@fortawesome/free-regular-svg-icons';\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// components\nimport Media from '../../components/Media';\nimport { default as Weather } from '../../components/Weather';\n// etc\nimport { getWeatherDescription } from '../../utils';\n\n\nconst { MediaHeader, MediaHeaderIcon, MediaContent } = Media;\nconst { WeatherIcon, WeatherTemp } = Weather;\n\nfunction CityInfo() {\n  const { currentWeather } = useContext(WeatherContext.WeatherStateContext);\n  console.log(currentWeather);\n  const { current, location } = currentWeather;\n\n  const getCityName = () => {\n    return `${location.name}, ${location.country}`;\n  };\n\n  const getCurrentDate = () => {\n    return new Date(location.localtime_epoch * 1000).toDateString();\n  };\n\n  if (Object.keys(currentWeather).length === 0) return null;\n\n  return (\n    <Media>\n      <MediaHeader\n        primaryText={getCityName()}\n        secondaryText={getCurrentDate()}\n        extra={<MediaHeaderIcon icon={regular} onIconClick={() => console.log('click')} />}\n      />\n      <MediaContent style={{ justifyContent: 'space-evenly' }}>\n        <WeatherIcon weatherCode={current.weather_code} size=\"14rem\" />\n        <WeatherTemp temperature={current.temperature} description={current.weather_descriptions[0]} />\n      </MediaContent>\n      <MediaContent>\n        Other Details\n      </MediaContent>\n    </Media>\n  );\n}\n\nCityInfo.whyDidYouRender = true;\n\nexport default CityInfo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  border: 2px solid var(--color-lightgrey);\n  border-radius: 5rem;\n  font-family: 'Fredoka One', cursive;\n  font-size: 2.6rem;\n  letter-spacing: 2px;\n  padding: 1rem 4rem 1rem 1rem;\n  margin-right: -3.5rem;\n  outline: none;\n  width: 100%;\n  transition: all 0.2s ease-out;\n\n  &::placeholder {\n    color: var(--color-lightgrey);\n  }\n\n  &:focus {\n    border: 2px solid var(--color-lightslategrey);\n\n    &::placeholder {\n      color: var(--color-lightslategrey);\n    }\n  }\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Search = (props) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <label htmlFor={props.id}></label>\n      {props.children}\n    </div>\n  );\n};\n\nSearch.SearchInput = Input;\nSearch.SearchButton = Button;\n\nexport default Search;\n","import React, { useContext, useEffect } from 'react';\nimport { string } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// hooks\nimport useWeather from '../../hooks/useWeather';\n// components\nimport Search from '../../components/Search';\n\nconst { SearchInput, SearchButton } = Search;\n\nfunction SearchBox(props) {\n  const { id, placeholder } = props;\n  const [weather, isFetchingCurrent, fetchCurrent] = useWeather();\n  const { setCurrentWeather } = useContext(WeatherContext.WeatherStateContext);\n\n  useEffect(() => {\n    setCurrentWeather(weather);\n  }, [weather, setCurrentWeather]);\n\n  const handleSubmit = (e) => {\n    const searchStr = e.target[0].value;\n    e.preventDefault();\n    fetchCurrent(searchStr);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Search id={id}>\n        <SearchInput id={id} placeholder={placeholder} />\n        <SearchButton>\n          <FontAwesomeIcon icon={isFetchingCurrent ? faSpinner : faSearch} size=\"2x\" spin={isFetchingCurrent} />\n        </SearchButton>\n      </Search>\n    </form>\n  );\n}\n\nSearchBox.propTypes = {\n  id: string,\n  placeholder: string\n};\n\nSearchBox.defaultProps = {\n  id: 'search-input',\n  placeholder: 'Enter a text here',\n};\n\nSearchBox.whyDidYouRender = true;\n\nexport default SearchBox;","import { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { WEATHER_BASE_URL } from '../constants';\n\nexport default function useWeather() {\n  const [weather, setWeather] = useState({});\n  const [isFetchingCurrent, setIsFetchingCurrent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const fetchCurrent = useCallback(async (query) => {\n    const params = {\n      access_key: process.env.REACT_APP_WEATHER_API_KEY,\n      query\n    };\n\n    try {\n      setIsFetchingCurrent(true);\n      const { data } = await axios.get(`${WEATHER_BASE_URL}/current`, { params });\n      if (data.error) {\n        setErrorMessage(data.error.info);\n      } else {\n        setWeather(data);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n    } finally {\n      setIsFetchingCurrent(false);\n    }\n  }, []);\n\n  return [\n    weather,\n    isFetchingCurrent,\n    fetchCurrent,\n    errorMessage\n  ];\n}","export const WEATHER_BASE_URL = 'http://api.weatherstack.com/';\n","import React from 'react';\nimport CityInfo from '../CityInfo';\nimport SearchBox from '../SearchBox';\n\nfunction Home() {\n  return (\n    <div style={{ padding: '100px' }}>\n      <div style={{ margin: '0 auto', width: '600px' }}>\n        <SearchBox placeholder=\"Enter a city name\" />\n      </div>\n      <div>\n        <CityInfo />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// context\nimport WeatherContext from './context/WeatherContext';\n// components\nimport Home from './containers/Home';\nimport CityInfo from './containers/CityInfo';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <WeatherContext.WeatherStateProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/details\" component={CityInfo} />\n        </Switch>\n      </WeatherContext.WeatherStateProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport whyDidYouRender from \"@welldone-software/why-did-you-render\";\n\nimport './index.css';\nimport App from './App';\n\nwhyDidYouRender(React, {\n  onlyLogs: true,\n  titleColor: \"green\",\n  diffNameColor: \"darkturquoise\"\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}