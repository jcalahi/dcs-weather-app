{"version":3,"sources":["context/WeatherContext.js","components/Media/index.js","containers/CityInfo/CityInfo.js","components/Search/index.js","containers/SearchBox/SearchBox.js","hooks/useWeather.js","constants.js","containers/Home/Home.js","App.js","index.js"],"names":["WeatherStateContext","createContext","WeatherStateProvider","children","useState","currentWeather","setCurrentWeather","Provider","value","Body","styled","div","Content","Media","MediaHeader","primary","tertiary","style","display","justifyContent","margin","fontSize","alignSelf","icon","regular","size","MediaBody","MediaContent","CityInfo","useContext","WeatherContext","console","log","Object","keys","length","city","location","name","country","getCityName","Date","localtime_epoch","toDateString","whyDidYouRender","Input","input","Button","button","Search","props","htmlFor","id","SearchInput","SearchButton","SearchBox","placeholder","weather","setWeather","isFetchingCurrent","setIsFetchingCurrent","errorMessage","setErrorMessage","useCallback","query","a","params","access_key","process","axios","get","data","error","info","useWeather","fetchCurrent","useEffect","onSubmit","e","searchStr","target","preventDefault","faSpinner","faSearch","spin","defaultProps","Home","padding","width","App","basename","window","pathname","exact","path","component","React","onlyLogs","titleColor","diffNameColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.551e4bec.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst WeatherStateContext = createContext();\nconst WeatherStateProvider = ({ children }) => {\n  const [currentWeather, setCurrentWeather] = useState({});\n  return (\n    <WeatherStateContext.Provider value={{ currentWeather, setCurrentWeather }}>\n      {children}\n    </WeatherStateContext.Provider>\n  );\n};\n\nexport default { WeatherStateContext, WeatherStateProvider };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as solid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as regular } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Header = ({ primary, tertiary }) => {\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'space-between', margin: '1.5rem 0' }}>\n        <h2 style={{ fontSize: '4rem', margin: '1.5rem 0' }}>{primary}</h2>\n        <span style={{ alignSelf: 'center' }}>\n          <FontAwesomeIcon icon={regular} size=\"2x\" />\n        </span>\n      </div>\n      <h4 style={{ fontSize: '2rem' }}>{tertiary}</h4>\n    </div>\n  );\n};\n\nconst Body = styled.div``;\nconst Content = styled.div``;\n\nconst Media = styled.div`\n`;\n\nMedia.MediaHeader = Header;\nMedia.MediaBody = Body;\nMedia.MediaContent = Content;\n\nexport default Media;\n","import React, { useContext } from 'react';\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// components\nimport Media from '../../components/Media';\n\nconst { MediaHeader, MediaBody } = Media;\n\nfunction CityInfo() {\n  const { currentWeather } = useContext(WeatherContext.WeatherStateContext);\n  console.log(currentWeather);\n\n  const getCityName = () => {\n    const city = currentWeather.location;\n    return `${city.name}, ${city.country}`;\n  };\n\n  const getCurrentDate = () => {\n    const date = new Date(currentWeather.location.localtime_epoch * 1000);\n    return date.toDateString();\n  };\n\n  if (Object.keys(currentWeather).length === 0) return null;\n\n  return (\n    <Media>\n      <MediaHeader primary={getCityName()} tertiary={getCurrentDate()} />\n    </Media>\n  );\n}\n\nCityInfo.whyDidYouRender = true;\n\nexport default CityInfo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  border: 2px solid var(--color-lightgrey);\n  border-radius: 5rem;\n  font-family: 'Fredoka One', cursive;\n  font-size: 2.6rem;\n  letter-spacing: 2px;\n  padding: 1rem 4rem 1rem 1rem;\n  margin-right: -3.5rem;\n  outline: none;\n  width: 100%;\n  transition: all 0.2s ease-out;\n\n  &::placeholder {\n    color: var(--color-lightgrey);\n  }\n\n  &:focus {\n    border: 2px solid var(--color-lightslategrey);\n\n    &::placeholder {\n      color: var(--color-lightslategrey);\n    }\n  }\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Search = (props) => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <label htmlFor={props.id}></label>\n      {props.children}\n    </div>\n  );\n};\n\nSearch.SearchInput = Input;\nSearch.SearchButton = Button;\n\nexport default Search;\n","import React, { useContext, useEffect } from 'react';\nimport { string } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n// context\nimport WeatherContext from '../../context/WeatherContext';\n// hooks\nimport useWeather from '../../hooks/useWeather';\n// components\nimport Search from '../../components/Search';\n\nconst { SearchInput, SearchButton } = Search;\n\nfunction SearchBox(props) {\n  const { id, placeholder } = props;\n  const [weather, isFetchingCurrent, fetchCurrent] = useWeather();\n  const { setCurrentWeather } = useContext(WeatherContext.WeatherStateContext);\n\n  useEffect(() => {\n    setCurrentWeather(weather);\n  }, [weather, setCurrentWeather]);\n\n  const handleSubmit = (e) => {\n    const searchStr = e.target[0].value;\n    e.preventDefault();\n    fetchCurrent(searchStr);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Search id={id}>\n        <SearchInput id={id} placeholder={placeholder} />\n        <SearchButton>\n          <FontAwesomeIcon icon={isFetchingCurrent ? faSpinner : faSearch} size=\"2x\" spin={isFetchingCurrent} />\n        </SearchButton>\n      </Search>\n    </form>\n  );\n}\n\nSearchBox.propTypes = {\n  id: string,\n  placeholder: string\n};\n\nSearchBox.defaultProps = {\n  id: 'search-input',\n  placeholder: 'Enter a text here',\n};\n\nSearchBox.whyDidYouRender = true;\n\nexport default SearchBox;","import { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { WEATHER_BASE_URL } from '../constants';\n\nexport default function useWeather() {\n  const [weather, setWeather] = useState({});\n  const [isFetchingCurrent, setIsFetchingCurrent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const fetchCurrent = useCallback(async (query) => {\n    const params = {\n      access_key: process.env.REACT_APP_WEATHER_API_KEY,\n      query\n    };\n\n    try {\n      setIsFetchingCurrent(true);\n      const { data } = await axios.get(`${WEATHER_BASE_URL}/current`, { params });\n      if (data.error) {\n        setErrorMessage(data.error.info);\n      } else {\n        setWeather(data);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n    } finally {\n      setIsFetchingCurrent(false);\n    }\n  }, []);\n\n  return [\n    weather,\n    isFetchingCurrent,\n    fetchCurrent,\n    errorMessage\n  ];\n}","export const WEATHER_BASE_URL = 'http://api.weatherstack.com/';\n","import React from 'react';\nimport CityInfo from '../CityInfo';\nimport SearchBox from '../SearchBox';\n\nfunction Home() {\n  return (\n    <div style={{ padding: '100px' }}>\n      <div style={{ margin: '0 auto', width: '600px' }}>\n        <SearchBox placeholder=\"Enter a city name\" />\n      </div>\n      <div>\n        <CityInfo />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// context\nimport WeatherContext from './context/WeatherContext';\n// components\nimport Home from './containers/Home';\nimport CityInfo from './containers/CityInfo';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <WeatherContext.WeatherStateProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/details\" component={CityInfo} />\n        </Switch>\n      </WeatherContext.WeatherStateProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport whyDidYouRender from \"@welldone-software/why-did-you-render\";\n\nimport './index.css';\nimport App from './App';\n\nwhyDidYouRender(React, {\n  onlyLogs: true,\n  titleColor: \"green\",\n  diffNameColor: \"darkturquoise\"\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}